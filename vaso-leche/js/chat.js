document.addEventListener('DOMContentLoaded', function() {
    // Elementos del DOM
    const icon = document.getElementById('chatbot-icon');
    const chatWindow = document.getElementById('chatbot-window');
    const closeButton = document.getElementById('close-chatbot');
    const messagesContainer = document.getElementById('chatbot-messages');
    const userInput = document.getElementById('user-input');
    const sendButton = document.getElementById('send-button');
    
    // Mostrar/ocultar ventana
    icon.addEventListener('click', function() {
        chatWindow.classList.toggle('visible');
        // Enfocar el input cuando se abre la ventana
        if (chatWindow.classList.contains('visible')) {
            setTimeout(() => userInput.focus(), 100);
        }
    });
    
    closeButton.addEventListener('click', function() {
        chatWindow.classList.remove('visible');
    });

    // Respuestas del bot (Vaso de Leche) - Mejorado con coincidencias parciales
    const botResponses = [
        // Saludos
        {
            patterns: [/hola/, /buenos\s*d[i√≠]as/, /buenas\s*tardes/, /buenas\s*noches/, /saludos/],
            response: "¬°Hola! üëã Soy el asistente del Programa Vaso de Leche. ¬øEn qu√© puedo ayudarte hoy?\n\n‚Ä¢ Inscripci√≥n al programa\n‚Ä¢ Requisitos\n‚Ä¢ Puntos de distribuci√≥n\n‚Ä¢ Horarios de entrega\n‚Ä¢ Beneficiarios"
        },
        // Despedidas
        {
            patterns: [/adios/, /chao/, /hasta\s*luego/, /nos\s*vemos/, /gracias/],
            response: "¬°Hasta luego! üëã Recuerda que estoy aqu√≠ para ayudarte con el Programa Vaso de Leche."
        },
        // Informaci√≥n general del programa
        {
            patterns: [/que\s*es.*programa/, /en\s*que\s*consiste/, /informacion.*programa/, /hablame.*programa/],
            response: "ü•õ **Programa Vaso de Leche**\n\nüîµ _Objetivo_: Brindar apoyo alimentario a:\n‚Ä¢ Ni√±os de 0-6 a√±os\n‚Ä¢ Mujeres embarazadas\n‚Ä¢ Adultos mayores\n‚Ä¢ Personas en situaci√≥n de vulnerabilidad\n\nüü¢ **Beneficios**:\n‚úì Complemento nutricional\n‚úì Reducci√≥n de desnutrici√≥n\n‚úì Apoyo a familias necesitadas\n\nüí° _Cobertura_: Todos los distritos de la provincia"
        },
        // Inscripci√≥n
        {
            patterns: [/inscripc/i, /como\s*me\s*inscribo/, /requisitos/, /documentos/, /que\s*necesito/],
            response: "üìù **Inscripci√≥n al Programa**\n\nüîµ _Requisitos_: \n1. Fotocopia de DNI\n2. Partida de nacimiento (ni√±os)\n3. Certificado de embarazo (gestantes)\n4. Declaraci√≥n jurada de ingresos\n\nüü¢ **Proceso**:\n‚úì Acudir a la municipalidad distrital\n‚úì Llenar formato de solicitud\n‚úì Entrevista social\n\nüí° _Periodo_: Inscripciones abiertas todo el a√±o"
        },
        // Puntos de distribuci√≥n
        {
            patterns: [/donde\s*recibo/, /puntos?\s*de\s*distribuc/i, /lugar\s*de\s*entrega/, /donde\s*est[a√°]n/, /centro\s*de\s*acopio/],
            response: "üìç **Centros de Distribuci√≥n**\n\nüîµ _Ubicaciones_: \n1. Municipalidad distrital\n2. Comedores populares\n3. Centros de salud\n4. Asentamientos humanos\n\nüü¢ **Horarios**:\n‚úì Lunes a viernes: 8am - 2pm\n‚úì Cada 15 d√≠as\n\nüí° _Consulta_: Llama al 123-456789 para tu punto m√°s cercano"
        },
        // Horarios
        {
            patterns: [/horarios?/, /cu[a√°]ndo\s*entregan/, /d[i√≠]as\s*de\s*entrega/, /a\s*que\s*hora/],
            response: "‚è∞ **Entrega de Productos**\n\nüîµ _Frecuencia_: \n‚Ä¢ Entrega quincenal\n‚Ä¢ Seg√∫n calendario establecido\n\nüü¢ **Horarios**:\n‚úì Lunes a viernes: 8:00 am - 2:00 pm\n‚úì S√°bados: 9:00 am - 12:00 pm (solo algunos puntos)\n\nüí° _Importante_: Llevar DNI y tarjeta de beneficiario"
        },
        // Beneficiarios
        {
            patterns: [/quienes\s*pueden/, /beneficiarios?/, /elegibilidad/, /requisitos?/],
            response: "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ **Qui√©nes pueden ser beneficiarios**\n\nüîµ _Prioridad_: \n1. Ni√±os de 0-6 a√±os\n2. Mujeres embarazadas\n3. Madres lactantes\n4. Adultos mayores de 65 a√±os en pobreza\n\nüü¢ **Requisitos**:\n‚úì Residir en el distrito\n‚úì No percibir otros programas similares\n‚úì Situaci√≥n de vulnerabilidad\n\nüí° _Cobertura_: Hasta 3 beneficiarios por familia"
        },
        // Productos
        {
            patterns: [/que\s*entregan/, /productos?/, /alimentos?/, /que\s*dan/, /recibo/],
            response: "üõí **Productos del Programa**\n\nüîµ _Entrega t√≠pica_: \n‚Ä¢ Leche en polvo o evaporada\n‚Ä¢ Avena\n‚Ä¢ Az√∫car\n‚Ä¢ Harina fortificada\n‚Ä¢ Conservas de pescado\n\nüü¢ **Variaci√≥n**:\n‚úì Seg√∫n disponibilidad presupuestal\n‚úì Seg√∫n necesidades nutricionales\n\nüí° _Valor_: Aprox. S/ 60.00 por entrega quincenal"
        },
        // Actualizaci√≥n de datos
        {
            patterns: [/actualizar/, /cambiar\s*datos/, /modificar/, /cambio\s*de\s*domicilio/],
            response: "üîÑ **Actualizaci√≥n de Datos**\n\nüîµ _Motivos_: \n‚Ä¢ Cambio de domicilio\n‚Ä¢ Nacimiento de nuevo hijo\n‚Ä¢ Cambio de situaci√≥n familiar\n\nüü¢ **Proceso**:\n‚úì Notificar a trabajadora social\n‚úì Presentar documentos actualizados\n‚úì Firma de declaraci√≥n jurada\n\nüí° _Plazo_: 15 d√≠as despu√©s del cambio"
        },
        // Preguntas frecuentes
        {
            patterns: [/preguntas?\s*frecuentes?/, /faq/, /dudas?/, /consultas?/],
            response: "‚ùì **Preguntas Frecuentes**\n\nüîµ _Consultas comunes_: \n‚Ä¢ ¬øPuedo cambiar mi punto de distribuci√≥n?\n‚Ä¢ ¬øQu√© hago si no recibo mi entrega?\n‚Ä¢ ¬øC√≥mo reportar un problema?\n‚Ä¢ ¬øEl programa tiene costo?\n\nüü¢ **Respuestas**:\n‚úì S√≠, con justificaci√≥n\n‚úì Reportar a municipalidad\n‚úì Llamar al 123-456789\n‚úì Es completamente gratuito\n\nüí° _Atenci√≥n_: Lunes a viernes 8am-5pm"
        },
        // Reclamos
        {
            patterns: [/reclamo/, /queja/, /no\s*recib[i√≠]/, /problema/, /reportar/],
            response: "üìû **Reclamos y Quejas**\n\nüîµ _Canales_: \n1. Oficina del Programa Vaso de Leche\n2. Defensor√≠a del Pueblo\n3. Mesa de Partes municipal\n\nüü¢ _Documentos_: \n‚úì DNI del beneficiario\n‚úì Constancia de inscripci√≥n\n‚úì Fechas de no entrega\n\nüí° _Plazo_: 5 d√≠as h√°biles para respuesta"
        },
        // Adultos mayores
        {
            patterns: [/adultos?\s*mayores?/, /ancianos?/, /adulto\s*mayor/],
            response: "üëµ **Adultos Mayores en el Programa**\n\nüîµ _Requisitos_: \n‚Ä¢ Mayor de 65 a√±os\n‚Ä¢ En situaci√≥n de pobreza\n‚Ä¢ Sin pensiones o ingresos estables\n\nüü¢ _Proceso_: \n‚úì Evaluaci√≥n socioecon√≥mica\n‚úì Inscripci√≥n en registro √∫nico\n\nüí° _Beneficio_: Entrega quincenal de alimentos"
        },
        // Verificaci√≥n de inscripci√≥n
        {
            patterns: [/verificar/, /estoy\s*inscrito/, /consultar/, /confirmar/],
            response: "‚úÖ **Verificaci√≥n de Inscripci√≥n**\n\nüîµ _M√©todos_: \n1. Consulta en municipalidad distrital\n2. Llamar al 123-456789\n3. Consulta web (pr√≥ximamente)\n\nüü¢ _Datos necesarios_: \n‚úì N√∫mero de DNI\n‚úì Nombres completos\n\nüí° _Tiempo_: 24 horas para respuesta"
        },
        // Donaciones
        {
            patterns: [/donar/, /donac/i, /colaborar/, /aportar/, /ayudar/],
            response: "‚ù§Ô∏è **Donaciones al Programa**\n\nüîµ _Aceptamos_: \n‚Ä¢ Leche en polvo o evaporada\n‚Ä¢ Avena\n‚Ä¢ Az√∫car\n‚Ä¢ Harina fortificada\n‚Ä¢ Conservas\n\nüü¢ _Contacto_: \n‚úì Oficina de Participaci√≥n Vecinal\n‚úì Tel: 123-456789\n\nüí° _Transparencia_: Todas las donaciones se inventarian y publican"
        },
        // Voluntariado
        {
            patterns: [/voluntariado/, /voluntario/, /colaborar/, /trabajar\s*de\s*voluntario/],
            response: "ü§ù **Voluntariado**\n\nüîµ _√Åreas_: \n‚Ä¢ Distribuci√≥n de productos\n‚Ä¢ Organizaci√≥n de almac√©n\n‚Ä¢ Apoyo en inscripciones\n‚Ä¢ Campa√±as nutricionales\n\nüü¢ _Requisitos_: \n‚úì Mayor de 18 a√±os\n‚úì Disponibilidad de horarios\n‚úì Entrevista previa\n\nüí° _Beneficios_: Certificado de voluntariado"
        },
        // Default
        {
            patterns: [/.*/],
            response: "No estoy seguro de entender. Prueba con alguna de estas opciones:\n\n‚Ä¢ 'Inscripci√≥n'\n‚Ä¢ 'Requisitos'\n‚Ä¢ 'Puntos de distribuci√≥n'\n‚Ä¢ 'Horarios de entrega'\n‚Ä¢ 'Beneficiarios'"
        }
    ];

    // A√±adir mensaje al chat
    function addMessage(text, isUser) {
        const messageDiv = document.createElement('div');
        messageDiv.classList.add('message');
        messageDiv.classList.add(isUser ? 'user-message' : 'bot-message');
        
        // Si el texto contiene saltos de l√≠nea, procesarlos
        if (text.includes('\n')) {
            text.split('\n').forEach(line => {
                const lineElement = document.createElement('div');
                lineElement.textContent = line;
                messageDiv.appendChild(lineElement);
            });
        } else {
            messageDiv.textContent = text;
        }
        
        messagesContainer.appendChild(messageDiv);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }

    // Obtener respuesta del bot
    function getBotResponse(userText) {
        // Limpiar y normalizar el texto
        const cleanText = userText.toLowerCase().replace(/[^\w\s√°√©√≠√≥√∫√±]/gi, '');
        
        // Buscar patr√≥n que coincida
        for (const item of botResponses) {
            for (const pattern of item.patterns) {
                if (pattern.test(cleanText)) {
                    return item.response;
                }
            }
        }
        
        // Respuesta por defecto si no hay coincidencia (no deber√≠a ocurrir)
        return "No estoy seguro de entender. ¬øPodr√≠as reformular tu pregunta?";
    }

    // Manejar env√≠o de mensajes
    function handleSendMessage() {
        const userText = userInput.value.trim();
        if (!userText) return;
        
        addMessage(userText, true);
        userInput.value = '';
        
        // Mostrar indicador de que el bot est√° escribiendo
        const typingIndicator = document.createElement('div');
        typingIndicator.classList.add('message', 'bot-message');
        typingIndicator.id = 'typing-indicator';
        typingIndicator.textContent = 'Escribiendo...';
        messagesContainer.appendChild(typingIndicator);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
        
        setTimeout(() => {
            // Eliminar indicador de escritura
            const indicator = document.getElementById('typing-indicator');
            if (indicator) {
                indicator.remove();
            }
            
            const botText = getBotResponse(userText);
            addMessage(botText, false);
        }, 1000);
    }

    // Eventos
    sendButton.addEventListener('click', handleSendMessage);
    userInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
            handleSendMessage();
        }
    });

    // Mensaje inicial (solo primera vez)
    let firstOpen = true;
    icon.addEventListener('click', () => {
        if (firstOpen && chatWindow.classList.contains('visible')) {
            setTimeout(() => {
                addMessage("¬°Hola! üëã Soy tu asistente para el Programa Vaso de Leche. Puedes preguntarme sobre inscripciones, requisitos, puntos de distribuci√≥n y m√°s. ¬øEn qu√© te puedo ayudar?", false);
            }, 300);
            firstOpen = false;
        }
    });

    // Mejorar la experiencia de usuario: enfocar input al hacer clic en cualquier parte del chat
    chatWindow.addEventListener('click', (e) => {
        if (e.target.closest('#chatbot-header') || e.target.closest('#chatbot-messages')) {
            userInput.focus();
        }
    });
});